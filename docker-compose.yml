version: "3"

services:
  nginx:
    image: nginx:stable
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/certs:/etc/ssl/certs
      - ./nginx/private:/etc/ssl/private
      - ./nginx/static:/var/www/static
    ports:
      - "443:443"
    environment:
      - FAKES_DEPLOY_SERVER_ADDRESS=${FAKES_DEPLOY_SERVER_ADDRESS}
      - API_ADDRESS=api:${API_PORT}

  api:
    build: ./api
    environment:
      - API_ADDRESS=api:${API_PORT}
      - NETWORK_ADDRESS=network:${NETWORK_PORT}
      - LOG_LEVEL=${LOG_LEVEL}
      - COOKIE_STORE_HASH_KEY=${COOKIE_STORE_HASH_KEY}
      - EMAIL_ADDRESS=${EMAIL_ADDRESS}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_ADDRESS=database:5432

  network:
    build:
      context: ./network
      args:
        - TEXT_DATASET_PATH=${TEXT_DATASET_PATH}
        - TEXT_MODEL_PATH=${TEXT_MODEL_PATH}
        - TEXT_PREPROCESSOR_PATH=${TEXT_PREPROCESSOR_PATH}
    environment:
      - NETWORK_HOST=network
      - NETWORK_PORT=${NETWORK_PORT}
      - TEXT_PREPROCESSOR_PATH=${TEXT_PREPROCESSOR_PATH}
      - TEXT_MODEL_PATH=${TEXT_MODEL_PATH}
      - IMG_MODEL_PATH=${IMG_MODEL_PATH}
      - TEXT_DATASET_PATH=${TEXT_DATASET_PATH}

  database:
    image: postgres:15.3
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

    volumes:
      - ./database/init_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql
  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      - SWAGGER_JSON=/etc/swagger/openapi.json
    volumes:
      - ./openapi.json:/etc/swagger/openapi.json
    ports:
      - "8080:8080"